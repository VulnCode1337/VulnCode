Project Structure:
- VulnCodeServer
	- config
		- passport.js
	- Include
	- Lib
	- models
		- admin.js
		- codeBlock.js
		- vulnerability.js
	- node_modules
	- routes
		- index.js
	- views
		- admin.ejs
		- home.ejs
		- layout.ejs
		- login.ejs
		- navigation.ejs
		- secure-code-practice.ejs
	app.js
	database.js
	package.json
	




/Source-Code-Practice-Page:

Buttons on this Page !nav:
Change Difficulty


Fields:
Difficulty Rating
CodeBlock
AnswerBox
Language

Psuedo Code
1. Select Difficulty 1:3. 

2. SHOW: 
	Difficulty Rating
	Language
	CodeBlock
	AnswerBox
	
3. Guess --> AnswerBox
	If Correct: 
		Display Correct!
		Display Explanation
	If Incorrect: 
		Display Incorrect
		Allow Second Guess -- > AnswerBox
			If Correct:
				Display Correct!
				Display Explanation
			If Incorrect:
				Display Incorrect.
				Display Explanation
				
4. Next()
	


/Add-Vulnerability Page:
* This request PUT's data in the MongoDB

Form Field Inputs:
Vulnerability Name
CodeBlock
Language
Difficulty Rating
Explanation


	
	
	
	
Issue Definitions List:
Ajax Header Manipulation
Client-Side HTTP Parameter Pollution
Cross Origin Resource Sharing (CORS) - All subdomains trusted
Cross Origin Resource Sharing (CORS) - Arbitrary Origin trusted 
Cross Site Request Forgery (CSRF)
Cross Site Scripting (XSS)
File Path Traversal
HTML5 Storage Manipulation
HTTP Request Smuggling
HTTP Response Header Injection
LDAP Injection
Open Redirection
OS Command Injection
Server Side Template Injection
Server-Side Prototype Polution
SQL Injection
Web Cache Poisoning
Web Socket URL Poisoning
XML Injection




